{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Deployment Location"
      }
    },
    "environmentNames": {
      "type": "array",
      "defaultValue": ["dev", "test", "prod"],
      "metadata": {
        "description": "Environments to create"
      }
    },
    "sqlAdminLogin": {
      "type": "string",
      "defaultValue": "synapseadmin",
      "metadata": {
        "description": "SQL Admin username"
      }
    },
    "sqlAdminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "SQL Admin password"
      }
    },
    "allowedIP": {
      "type": "string",
      "defaultValue": "0.0.0.0",
      "metadata": {
        "description": "IP for firewall rule (example only)"
      }
    }
  },
  "variables": {},
  "functions": [
    {
      "name": "environment",
      "inputs": [],
      "output": "[parameters('environmentNames')[copyIndex('env')]]"
    },
    {
      "name": "dataset",
      "inputs": [],
      "output": "[array('bronze', 'silver', 'gold')[copyIndex('dataset')]]"
    }
  ],
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[concat('synapselake', uniqueString(resourceGroup().id, parameters('location'), environment()))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "copy": {
        "name": "storageAccountsCopy",
        "count": "[length(parameters('environmentNames'))]",
        "mode": "Serial"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-09-01",
      "name": "[concat(
          'synapselake',
          uniqueString(resourceGroup().id, parameters('location'), environment()),
          '/default/',
          dataset()
        )]",
      "properties": {},
      "copy": [
        {
          "name": "env",
          "count": "[length(parameters('environmentNames'))]"
        },
        {
          "name": "dataset",
          "count": 3
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', concat('synapselake', uniqueString(resourceGroup().id, parameters('location'), environment())))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[concat('kv-synapse-', environment())]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "standard"
        },
        "enabledForTemplateDeployment": true,
        "accessPolicies": []
      },
      "copy": {
        "name": "keyVaultsCopy",
        "count": "[length(parameters('environmentNames'))]",
        "mode": "Serial"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[concat('synapsews', uniqueString(resourceGroup().id, parameters('location'), environment()))]",
      "location": "[parameters('location')]",
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', concat('synapselake', uniqueString(resourceGroup().id, parameters('location'), environment())))).primaryEndpoints.dfs]"
        },
        "sqlAdministratorLogin": "[parameters('sqlAdminLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "managedVirtualNetwork": "default",
        "publicNetworkAccess": "Enabled",
        "purviewConfiguration": {
          "purviewResourceId": ""
        },
        "workspaceRepositoryConfiguration": {
          "type": "FactoryGitHubConfiguration",
          "hostName": "https://github.com",
          "accountName": "",
          "repositoryName": "",
          "collaborationBranch": "main",
          "rootFolder": "/",
          "tenantId": "[subscription().tenantId]",
          "lastCommitId": ""
        },
        "ipFirewallRules": [
          {
            "name": "AllowMyIP",
            "startIpAddress": "[parameters('allowedIP')]",
            "endIpAddress": "[parameters('allowedIP')]"
          }
        ]
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "copy": {
        "name": "synapseWorkspacesCopy",
        "count": "[length(parameters('environmentNames'))]",
        "mode": "Serial"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', concat('synapselake', uniqueString(resourceGroup().id, parameters('location'), environment())))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
      "apiVersion": "2021-06-01",
      "name": "[concat(
        concat('synapsews', uniqueString(resourceGroup().id, parameters('location'), environment())),
        '/default/LakeTo',
        environment(),
        'Endpoint'
      )]",
      "properties": {
        "groupId": "dfs",
        "privateLinkResourceId": "[resourceId('Microsoft.Storage/storageAccounts', concat('synapselake', uniqueString(resourceGroup().id, parameters('location'), environment())))]",
        "requestMessage": "Request access to ADLS"
      },
      "copy": {
        "name": "managedPrivateEndpointCopy",
        "count": "[length(parameters('environmentNames'))]",
        "mode": "Serial"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', concat('synapsews', uniqueString(resourceGroup().id, parameters('location'), environment())))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat('synapselake', uniqueString(resourceGroup().id, parameters('location'), environment())))]"
      ]
    },
    {
      "type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
      "apiVersion": "2021-06-01",
      "name": "[concat(
        concat('synapsews', uniqueString(resourceGroup().id, parameters('location'), environment())),
        '/default/KvTo',
        environment(),
        'Endpoint'
      )]",
      "properties": {
        "groupId": "vault",
        "privateLinkResourceId": "[resourceId('Microsoft.KeyVault/vaults', concat('kv-synapse-', environment()))]",
        "requestMessage": "Request access to Key Vault"
      },
      "copy": {
        "name": "managedPrivateEndpointKvCopy",
        "count": "[length(parameters('environmentNames'))]",
        "mode": "Serial"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', concat('synapsews', uniqueString(resourceGroup().id, parameters('location'), environment())))]",
        "[resourceId('Microsoft.KeyVault/vaults', concat('kv-synapse-', environment()))]"
      ]
    }
  ],
  "outputs": {
    "synapseWorkspaceNames": {
      "type": "array",
      "value": "[
        map( parameters('environmentNames'), 'env', concat('synapsews', uniqueString(resourceGroup().id, parameters('location'), env)) )
      ]"
    }
  }
}
