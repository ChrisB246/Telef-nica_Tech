{
	"name": "BRONZE_TO_SILVER",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BRZ_SALES",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SLV_SALES",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          order_id as string,",
				"          customer_name as string,",
				"          product_name as string,",
				"          quantity as string,",
				"          unit_price as string,",
				"          total_price as string,",
				"          payment_method as string,",
				"          shipping_address as string,",
				"          shipping_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source1 filter(payment_method != 'cash') ~> filter1",
				"filter1 derive(shipping_date = toDate(shipping_date, 'yyyy-MM-dd')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          order_id,",
				"          customer_name,",
				"          product_name,",
				"          quantity,",
				"          unit_price,",
				"          total_price,",
				"          payment_method,",
				"          shipping_address,",
				"          shipping_date",
				"     )) ~> sink1"
			]
		}
	}
}